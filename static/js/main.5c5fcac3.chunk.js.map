{"version":3,"sources":["context.js","components/Contacts.js","components/Contact.js","components/Header.js","components/FormInputGroup.js","components/AddContact.js","components/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","list","localStorage","setItem","JSON","stringify","Provider","dispatch","setState","getItem","this","parse","value","props","children","Component","Consumer","Contacts","showContactInfo","deleteContact","handleChange","name","phone","email","className","src","style","height","width","alt","cursor","onClick","bind","to","href","Contact","map","key","Header","branding","defaultProps","FormInputGroup","onChange","placeholder","error","htmlFor","classnames","AddContact","e","target","handleSubmit","preventDefault","context","length","history","push","maxWidth","margin","onSubmit","contextType","EditContact","match","params","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c5fcac3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n export const Context = React.createContext();\r\n \r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                ),\r\n                 list : localStorage.setItem(\"contacts\", JSON.stringify(state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )))\r\n            };\r\n            case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts],\r\n                list : localStorage.setItem(\"contacts\", JSON.stringify([...state.contacts, action.payload]))\r\n            };\r\n            case \"EDIT_CONTACT\":\r\n                return{\r\n                    ...state.contacts[action.payload.id - 1] = action.payload\r\n                    \r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends React.Component {\r\n    state = {\r\n        contacts: [],\r\n        list: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    componentDidMount() {\r\n        let list = localStorage.getItem(\"contacts\")\r\n        list ? this.setState({\r\n            contacts: JSON.parse(list)\r\n        }) : localStorage.setItem(\"contacts\", JSON.stringify(this.state.list))   \r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contacts extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    deleteContact = (id, dispatch) => {\r\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    };\r\n\r\n    handleChange = () => {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    };\r\n    render() {\r\n        const { name, phone, email, id } = this.props.contact;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        \r\n                            <h4>\r\n                                <img src=\"../../\" className=\"mr-2 rounded\" style={{height: \"35px\", width:\"45px\"}} alt={`${id}`}/>\r\n                                {name}{\" \"}\r\n                                <i\r\n                                    style={cursor}\r\n                                    className=\"fa fas fa-sort-down\"\r\n                                    onClick={this.handleChange}\r\n                                ></i>{\" \"}\r\n                                <i\r\n                                    className=\"fa fas fa-times float-right text-danger\"\r\n                                    onClick={this.deleteContact.bind(\r\n                                        this,\r\n                                        id,\r\n                                        dispatch\r\n                                    )}\r\n                                    style={cursor}\r\n                                ></i>{\" \"}\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                <i\r\n                                className=\"fa fas fa-pencil float-right text-dark mr-3\"\r\n                                style={cursor}\r\n                            ></i>\r\n                                </Link>\r\n                                \r\n                            </h4>\r\n                            {this.state.showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\"> <a className=\"btn-link\" href={`mailto: ${email}`}>{email}</a> </li>\r\n                                    <li className=\"list-group-item\"><a className=\"btn-link\" href={`tel: ${phone}`}>{phone}</a> </li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\nconst cursor = {\r\n    cursor: \"pointer\"\r\n};\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport {Consumer} from '../context';\r\nimport Contacts from \"./Contacts\";\r\n\r\nclass Contact extends Component {\r\n    \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n            {value => {\r\n                const {contacts} = value;\r\n                return(\r\n                    <>\r\n                    <h1 className=\"display-4 mb-5\"> <span className=\"text-danger\"> Contact </span>List</h1>\r\n                 {contacts.map(contact => (\r\n                    <Contacts key={contact.id} contact={contact} />\r\n                ))}\r\n                    </>\r\n                )\r\n            }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n function Header({branding}) {\r\n    return (\r\n        <header>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-danger mb-3 py-0\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"navbar-brand \">{branding}</a>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/\" className=\"nav-link\"> <i className=\" fa fas fa-home\"></i> Home</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\"><i className=\" fa fas fa-plus\"></i> Add</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\"><i className=\" fa fas fa-question\"></i> About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: \"My App\"\r\n}\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport classnames from \"classnames\"\r\n\r\nconst FormInputGroup = ({\r\n    name,\r\n    type,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    error\r\n\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n                <label htmlFor={name}>{name}</label>\r\n                <input\r\n                type={type}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                id={name}\r\n                className={classnames('form-control', {'is-invalid' : error})}\r\n                placeholder={placeholder}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">\r\n            {error}\r\n            </div>}\r\n                \r\n        </div>\r\n    );\r\n}\r\n\r\nFormInputGroup.defaultProps={\r\n    type: \"text\"\r\n};\r\n\r\nexport default FormInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer, Context } from \"../context\"\r\nimport FormInputGroup from \"./FormInputGroup\"\r\n\r\nexport default class AddContact extends Component {\r\n    static contextType = Context\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        error: {}\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (dispatch, e)=>{\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        if(name === \"\"){\r\n            this.setState({error:{name: \"name is required\"}});\r\n            return;\r\n        }\r\n        if(email === \"\"){\r\n            this.setState({error:{email: \"email is required\"}});\r\n            return;\r\n        }\r\n        if(phone === \"\"){\r\n            this.setState({error:{phone: \"phone is required\"}});\r\n            return;\r\n        }\r\n        const {contacts} = this.context\r\n        const newContact = {\r\n            id: contacts.length === -1 ? 0 : contacts.length + 1,\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        dispatch({type: 'ADD_CONTACT', payload:newContact});\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email:\"\",\r\n            phone: \"\",\r\n            error:{}\r\n        })\r\n        this.props.history.push(\"/\");\r\n        \r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return(\r\n                        <div className=\"card mb-4\" style={{maxWidth:\"80%\",margin:\"0 auto\"}}>\r\n                        <h4 className=\"card-header\">Add Contact</h4>\r\n                        <form className=\"card-body\" onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                            <FormInputGroup \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                            id=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name...\" \r\n                            error = {this.state.error.name}\r\n                            />\r\n                            <FormInputGroup \r\n                            type=\"email\"\r\n                           name=\"email\"\r\n                           value={this.state.email}\r\n                           onChange={this.handleChange}\r\n                           id=\"email\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Enter Email...\"\r\n                           error = {this.state.error.email}\r\n                            />\r\n                            <FormInputGroup \r\n                            type=\"tel\"\r\n                            name=\"phone\"\r\n                            value={this.state.phone}\r\n                            onChange={this.handleChange}\r\n                            id=\"phone\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Phone...\" \r\n                            error = {this.state.error.phone}\r\n                            />\r\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                           \r\n                        </form>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\"\r\nimport FormInputGroup from \"./FormInputGroup\"\r\nimport {Context} from \"../context\"\r\n\r\nexport default class EditContact extends Component {\r\n    static contextType = Context;\r\n   \r\n    state = {\r\n        \r\n        name: \"\",\r\n        email:\"\",\r\n        phone: \"\",\r\n        error: {}\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    \r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const {name, email, phone} = this.context.contacts[id - 1];\r\n        this.setState({\r\n            name,\r\n            email,\r\n            phone\r\n        })\r\n    }\r\n\r\n    handleSubmit = (dispatch, e)=>{\r\n        e.preventDefault();\r\n        const {name, email, phone} = this.state;\r\n\r\n        if(name === \"\"){\r\n            this.setState({error:{name: \"name is required\"}});\r\n            return;\r\n        }\r\n        if(email === \"\"){\r\n            this.setState({error:{email: \"email is required\"}});\r\n            return;\r\n        }\r\n        if(phone === \"\"){\r\n            this.setState({error:{phone: \"phone is required\"}});\r\n            return;\r\n        }\r\n        const {id} = this.props.match.params;\r\n        const newContact = {\r\n            id,\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        dispatch({type: 'EDIT_CONTACT', payload:newContact});\r\n        \r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email:\"\",\r\n            phone: \"\",\r\n            error:{}\r\n        })\r\n        this.props.history.push(\"/\");\r\n        \r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    const {name, email, phone} = this.state;\r\n                    return(\r\n                        <div className=\"card mb-4\" style={{maxWidth:\"80%\",margin:\"0 auto\"}}>\r\n                        <h4 className=\"card-header\">Edit Contact</h4>\r\n                        <form className=\"card-body\" onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                            <FormInputGroup \r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={this.handleChange}\r\n                            id=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Name...\" \r\n                            error = {this.state.error.name}\r\n                            />\r\n                            <FormInputGroup \r\n                            type=\"email\"\r\n                           name=\"email\"\r\n                           value={email}\r\n                           onChange={this.handleChange}\r\n                           id=\"email\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Enter Email...\"\r\n                           error = {this.state.error.email}\r\n                            />\r\n                            <FormInputGroup \r\n                            type=\"tel\"\r\n                            name=\"phone\"\r\n                            value={phone}\r\n                            onChange={this.handleChange}\r\n                            id=\"phone\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter Phone...\" \r\n                            error = {this.state.error.phone}\r\n                            />\r\n                                <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-light btn-block\"/>\r\n                           \r\n                        </form>\r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                About Contact Manager\r\n            </h1>\r\n            <p>Simple app that helps manage contacts</p>\r\n            <p className=\"lead\">v1.1.0</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, this page does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Provider } from \"./context\";\r\nimport Contact from \"./components/Contact\";\r\nimport Header from \"./components/Header\";\r\nimport AddContact from \"./components/AddContact\";\r\nimport EditContact from \"./components/EditContact\";\r\nimport About from \"./components/pages/About\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Provider>\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Header branding=\"Contact Manager\" />\r\n                    <div className=\"container\">\r\n                   \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Contact} />\r\n                        <Route exact path=\"/contact/add\" component={AddContact} />\r\n                        <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                        <Route exact path=\"/about\" component={About} />\r\n                        <Route component={NotFound} />\r\n                    </Switch>    \r\n                    </div>\r\n                </div>\r\n                </Router>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}